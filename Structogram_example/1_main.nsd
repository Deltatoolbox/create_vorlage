<?xml version="1.0" encoding="UTF-8"?>
<root xmlns:nsd="https://structorizer.fisch.lu" version="3.32" preRepeat="until " postFor="to" preReturn="return" postForIn="in" preWhile="while " output="OUTPUT" input="INPUT" preFor="for" preExit="exit" preLeave="leave" ignoreCase="true" preThrow="throw" preForIn="foreach" stepFor="by" author="i00203599" created="2019-03-21" changedby="i40011172" changed="2024-04-29" origin="Structorizer 3.26-05" text="&#34;main&#34;" comment="" color="ffffff" type="program" style="nice">
	<children>
		<instruction text="&#34;// Author:  vorname nachname&#34;,&#34;// Kanidaten nummer: kannum&#34;,&#34;// Date: xx.xx.20xx&#34;" comment="" color="ffffff" rotated="0" disabled="0"></instruction>
		<instruction text="&#34;include header files&#34;" comment="" color="ffffff" rotated="0" disabled="0"></instruction>
		<instruction text="&#34;//DEFINES:&#34;,&#34;&#34;,&#34;//Define ports&#34;,&#34;LED PORTA&#34;,&#34;BUTTON PORTC&#34;,&#34;&#34;,&#34;//Standard&#34;,&#34;TRUE 1&#34;,&#34;FALSE 0&#34;,&#34;ON 1&#34;,&#34;OFF 0&#34;,&#34;&#34;,&#34;//Timer names&#34;,&#34;get_Zyklus_Name() get_Zyklus() //use_case_Zyklus0&#34;,&#34;get_Zyklus1_Name() get_Zyklus1() //use_case_Zyklus1&#34;,&#34;get_Zyklus2_Name() get_Zyklus2() //use_case_Zyklus2&#34;,&#34;&#34;,&#34;reset_Zyklus_Name() reset_Zyklus() //use_case_Zyklus0&#34;,&#34;reset_Zyklus1_Name() reset_Zyklus1() //use_case_Zyklus1&#34;,&#34;reset_Zyklus2_Name() reset_Zyklus2() //use_case_Zyklus2&#34;,&#34;&#34;,&#34;//Timers for blink&#34;,&#34;getBlink() get_Zyklus()    //Used for blink&#34;,&#34;getBlink1() get_Zyklus1()   //Used for blink1&#34;,&#34;getBlink2() get_Zyklus2()   //Used for blink2&#34;,&#34;&#34;,&#34;resetBlink() reset_Zyklus()  //Used for blink&#34;,&#34;resetBlink1() reset_Zyklus1()  //Used for blink1&#34;,&#34;resetBlink2() reset_Zyklus2()  //Used for blink2&#34;,&#34;&#34;,&#34;//Device States&#34;,&#34;device_states1 1&#34;,&#34;device_states2 2&#34;,&#34;device_states3 3&#34;,&#34;device_states4 4&#34;,&#34;device_states5 5&#34;,&#34;device_states6 6&#34;,&#34;device_states7 7&#34;,&#34;device_states8 8&#34;,&#34;device_states9 9&#34;,&#34;&#34;,&#34;//Blinking names&#34;,&#34;name1_blink() blink(NewValueTon,NewValueToff) //in ms, Hz , :&#34;,&#34;name2_blink() blink1(NewValueTon,NewValueToff) //in ms, Hz , :&#34;,&#34;name3_blink() blink2(NewValueTon,NewValueToff) //in ms, Hz , :&#34;,&#34;&#34;,&#34;//Masks &#34;,&#34;MASK7 0x80&#34;,&#34;MASK6 0x40&#34;,&#34;MASK5 0x20&#34;,&#34;MASK4 0x10&#34;,&#34;MASK3 0x08&#34;,&#34;MASK2 0x04&#34;,&#34;MASK1 0x02&#34;,&#34;MASK0 0x01&#34;,&#34;&#34;,&#34;//Project specific&#34;" comment="&#34;&#34;" color="ffffff" rotated="0" disabled="0"></instruction>
		<instruction text="&#34;//GLOBAL VARIABLES:&#34;,&#34;&#34;,&#34;//Standard&#34;,&#34;copyOutput := 0&#34;,&#34;copyInput := 0&#34;,&#34;&#34;,&#34;//INPUT Variables (PosEdge)&#34;,&#34;button_7_PosEdge := 0  //S7&#34;,&#34;button_6_PosEdge := 0  //S6&#34;,&#34;button_5_PosEdge := 0  //S5&#34;,&#34;button_4_PosEdge := 0  //S4&#34;,&#34;button_3_PosEdge := 0  //S3&#34;,&#34;button_2_PosEdge := 0  //S2&#34;,&#34;button_1_PosEdge := 0  //S1&#34;,&#34;button_0_PosEdge := 0  //S0&#34;,&#34;&#34;,&#34;//INPUT Variables (NegEdge)&#34;,&#34;button_7_NegEdge := 0  //S7&#34;,&#34;button_6_NegEdge := 0  //S6&#34;,&#34;button_5_NegEdge := 0  //S5&#34;,&#34;button_4_NegEdge := 0  //S4&#34;,&#34;button_3_NegEdge := 0  //S3&#34;,&#34;button_2_NegEdge := 0  //S2&#34;,&#34;button_1_NegEdge := 0  //S1&#34;,&#34;button_0_NegEdge := 0  //S0&#34;,&#34;&#34;,&#34;//INPUT Variables (Button State)&#34;,&#34;switch_7 := 0  //S7&#34;,&#34;switch_6 := 0  //S6&#34;,&#34;switch_5 := 0  //S5&#34;,&#34;switch_4 := 0  //S4&#34;,&#34;switch_3 := 0  //S3&#34;,&#34;switch_2 := 0  //S2&#34;,&#34;switch_1 := 0  //S1&#34;,&#34;switch_0 := 0  //S0&#34;,&#34;&#34;,&#34;&#34;,&#34;//OUTPUT Variables&#34;,&#34;led_7 := statled_7  //LED7&#34;,&#34;led_6 := statled_6  //LED6&#34;,&#34;led_5 := statled_5  //LED5&#34;,&#34;led_4 := statled_4  //LED4&#34;,&#34;led_3 := statled_3  //LED3&#34;,&#34;led_2 := statled_2  //LED2&#34;,&#34;led_1 := statled_1  //LED1&#34;,&#34;led_0 := statled_0  //LED0&#34;,&#34;&#34;,&#34;//Device State&#34;,&#34;deviceState := state_start&#34;,&#34;&#34;,&#34;//Project specific&#34;" comment="" color="ffffff" rotated="0" disabled="0"></instruction>
		<instruction text="&#34;//PROTOTYPES:&#34;,&#34;&#34;,&#34;//Standard&#34;,&#34;initializing&#34;,&#34;readInput&#34;,&#34;process&#34;,&#34;writeOutput&#34;,&#34;&#34;,&#34;//Blink&#34;,&#34;blink(tOn, tOff)&#34;,&#34;blink1(tOn, tOff)&#34;,&#34;blink2(tOn, tOff)&#34;,&#34;&#34;,&#34;//Project Specific&#34;" comment="" color="ffffff" rotated="0" disabled="0"></instruction>
		<call text="&#34;initializing&#34;" comment="" color="ffffff" disabled="0" ismethoddecl="0"></call>
		<forever comment="" color="ffffff" disabled="0">
			<qForever>
				<call text="&#34;readInput&#34;" comment="" color="ffffff" disabled="0" ismethoddecl="0"></call>
				<call text="&#34;process&#34;" comment="" color="ffffff" disabled="0" ismethoddecl="0"></call>
				<call text="&#34;writeOutput&#34;" comment="" color="ffffff" disabled="0" ismethoddecl="0"></call>
			</qForever>
		</forever>
	</children>
</root>