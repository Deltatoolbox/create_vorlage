<?xml version="1.0" encoding="UTF-8"?>
<root xmlns:nsd="https://structorizer.fisch.lu" version="3.32" preRepeat="until " postFor="to" preReturn="return" postForIn="in" preWhile="while " output="OUTPUT" input="INPUT" preFor="for" preExit="exit" preLeave="leave" ignoreCase="true" preThrow="throw" preForIn="foreach" stepFor="by" author="i00203599" created="2019-03-21" changedby="i40011172" changed="2024-04-10" origin="Structorizer 3.26-05" text="&#34;writeOutput&#34;" comment="" color="ffffff" type="program" style="nice">
	<children>
		<instruction text="&#34;// Author:	 vorname nachname&#34;,&#34;// Kanidaten nummer: kannum&#34;,&#34;// Date:	xx.xx.20xx&#34;" comment="&#34;&#34;" color="ffffff" rotated="0" disabled="0"></instruction>
		<instruction text="&#34;//Project Specific&#34;" comment="" color="ffffff" rotated="0" disabled="0"></instruction>
		<instruction text="&#34;//OUTPUT masking&#34;,&#34;copyOutput := led_7 &#60;&#60; bit7  //LED 7&#34;,&#34;copyOutput := copyOutput bitweise or (led_6 &#60;&#60; bit6)  //LED 6&#34;,&#34;copyOutput := copyOutput bitweise or (led_5 &#60;&#60; bit5)  //LED 5&#34;,&#34;copyOutput := copyOutput bitweise or (led_4 &#60;&#60; bit4)  //LED 4&#34;,&#34;copyOutput := copyOutput bitweise or (led_3 &#60;&#60; bit3)  //LED 3&#34;,&#34;copyOutput := copyOutput bitweise or (led_2 &#60;&#60; bit2)  //LED 2&#34;,&#34;copyOutput := copyOutput bitweise or (led_1 &#60;&#60; bit1)  //LED 1&#34;,&#34;copyOutput := copyOutput bitweise or led_0            //LED 0&#34;" comment="" color="ffffff" rotated="0" disabled="0"></instruction>
		<instruction text="&#34;LED := copyOutput&#34;" comment="" color="ffffff" rotated="0" disabled="0"></instruction>
	</children>
</root>